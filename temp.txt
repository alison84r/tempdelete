using System;
using System.Collections.Generic;

class Point
{
    public double X { get; set; }
    public double Y { get; set; }

    public Point(double x, double y)
    {
        X = x;
        Y = y;
    }
}

class Polyline
{
    private readonly Point[] points;
    private readonly double maxAngleRadians;
    private readonly double length;

    public Polyline(Point[] points, double maxAngleDegrees, double length)
    {
        this.points = points;
        this.maxAngleRadians = maxAngleDegrees * Math.PI / 180;
        this.length = length;
    }

    public Point[] Smooth()
    {
        var result = new List<Point>();

        for (int i = 0; i < points.Length - 1; i++)
        {
            var p1 = points[i];
            var p2 = points[i + 1];

            var dx = p2.X - p1.X;
            var dy = p2.Y - p1.Y;

            var angle = Math.Atan2(dy, dx);

            if (angle > maxAngleRadians)
            {
                var newX = p1.X + Math.Cos(angle) * length;
                var newY = p1.Y + Math.Sin(angle) * length;
                result.Add(new Point(newX, newY));
            }
            else
            {
                result.Add(p1);
            }
        }

        result.Add(points[points.Length - 1]);

        return result.ToArray();
    }
}
